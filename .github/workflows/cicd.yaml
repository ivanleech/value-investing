name: CICD
on:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  workflow_dispatch

permissions:
  contents: read

env:
    REPO_NAME: ${{ github.event.repository.name }}
    REPO_OWNER: ${{ github.repository_owner }}

jobs:
  run-test:
    runs-on: ubuntu-latest
    steps:
    - name: Dump github context
      run:   echo "$GITHUB_CONTEXT"
      shell: bash
      env: 
        GITHUB_CONTEXT: ${{ toJson(github) }}

    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest
 
  deploy-img:
    runs-on: ubuntu-latest
    needs: run-test
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ env.REPO_NAME }}
    
      - name: Log in to Docker Hub Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login docker.io -u ${{ secrets.DOCKER_USERNAME }} --password-stdin 
    
      - name: Tag the Docker image
        run: docker tag ${{ env.REPO_NAME }} ${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}

      - name: Push the Docker image
        run: docker push ${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}
